parameters:
- name: DeploymentType
  displayName: Type of Deployment Stage
  type: string
  values:
  - Beta
  - Production
- name: DependsOn
  displayName: Depends On
  type: string
- name: ApplicationName
  type: string
- name: PublishFolder
  type: string
- name: RepositoryFolder
  type: string
- name: GitEmail
  type: string
- name: GitUsername
  type: string

stages:
- stage: deploy${{parameters.DeploymentType}}
  displayName: ${{parameters.DeploymentType}}
  lockBehavior: runLatest
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/1.16.5'))
  dependsOn: 
  - build
  - ${{ if ne(parameters.DependsOn, 'build') }}:
    - deploy${{parameters.DependsOn}}

  jobs:
  - deployment: deploy${{parameters.DeploymentType}}
    displayName: Deploy ${{parameters.DeploymentType}}
    environment: github-servermanager-${{ lower(parameters.DeploymentType) }}
    workspace:
      clean: all
    variables:
      - name: NewVersionBuild
        value: $(VersionBuild)
      - name: NewVersionRevision
        value: $(VersionRevision)
    
    strategy:
      runOnce:
        deploy:
          steps:
          - task: PowerShell@2
            displayName: Write Deployment Parameters
            #condition: contains(variables['system.debug'], 'true')
            inputs:
              targetType: inline
              script: |
                Write-Host "DeploymentType: ${{parameters.DeploymentType}}"
                Write-Host "DependsOn: ${{parameters.DependsOn}}"
                Write-Host "ApplicationName: ${{parameters.ApplicationName}}"
                Write-Host "PublishFolder: ${{parameters.PublishFolder}}"
                Write-Host "RepositoryFolder: ${{parameters.RepositoryFolder}}"
                Write-Host "GitEmail: ${{parameters.GitEmail}}"
                Write-Host "GitUsername: ${{parameters.GitUsername}}"
              pwsh: true
